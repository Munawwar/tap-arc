TAP version 13
# CLI flags and params
ok 1 By default the CLI passes no controlling params
ok 2 Got name from CLI --name
ok 3 Got name from CLI -n
ok 4 should not be strictly equal
ok 5 Got install: false from module params
ok 6 Got install: false from CLI --noinstall
ok 7 Got install: false from CLI --no-install
ok 8 Got runtime from CLI --runtime
ok 9 Got runtime from CLI -r
ok 10 Got standalone from module params
ok 11 Got static from CLI
ok 12 Got verbose from CLI
ok 13 Got verbose from CLI
ok 14 Got folder from CLI
ok 15 Got folder from CLI, ignored 'create'
# Set up env
ok 16 Loaded getName
# No name/folder specified
ok 17 Got default name of current directory
ok 18 Got default folder of current directory
# Name specified
ok 19 Name passed through
ok 20 Got default folder of current directory
# Folder specified
ok 21 Got default name of current directory
ok 22 Got specified folder: /Users/tbeseda/dev/architect/create
ok 23 Got default name of current directory
ok 24 Got specified folder: foo
ok 25 Got default name of current directory
ok 26 Got specified folder: ./foo
ok 27 Got default name of current directory
ok 28 Got specified folder: ../foo
ok 29 Got default name of current directory
ok 30 Got specified folder: ../../foo
ok 31 Got default name of current directory
ok 32 Got specified folder: /foo
ok 33 Got default name of current directory
ok 34 Got specified folder: ./
ok 35 Got name from directory: architect
ok 36 Got specified folder: ../
ok 37 Got name from directory: dev
ok 38 Got specified folder: ../../
# Set up env
ok 39 Loaded getName
# Package writer bails when Architect is called from a global install
ok 40 Invocation from global install should opt out of Arc installation
ok 41 Invocation from global install should opt out of Arc installation
# Package writer writes a package file when none exists
ok 42 Missing package file found should opt into Arc installation
ok 43 Wrote package.json to specified folder
ok 44 package.json uses specified app name
# Package writer determines whether to install Arc based on an existing package.json
ok 45 Found package file with Arc as dep should opt out of Arc installation
ok 46 Found package file with Arc as dev dep should opt out of Arc installation
ok 47 Found package file with no Arc installed, so opt into Arc installation
# Should invoke creation @plugin functions
ok 48 Did not error
ok 49 Got path to new plugin function
ok 50 Specified plugin pragma
# Should not error if @plugins does not exist in inventory
ok 51 Did not error
# Set up env
ok 52 Loaded writeCode
# Should write body if provided via argument
ok 53 Correct file location to be written to
ok 54 Correct argument-provided content written
# Should write template body if no body provided via argument
ok 55 Correct file location to be written to
ok 56 Correct argument-provided content written

1..56
# tests 56
# pass  56

# ok
